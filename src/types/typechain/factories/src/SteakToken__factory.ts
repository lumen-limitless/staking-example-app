/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { SteakToken, SteakTokenInterface } from "../../src/SteakToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "faucetMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastFaucetMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b50604051620015aa380380620015aa83398101604081905262000035916200032d565b6040518060400160405280600b81526020016a29ba32b0b5902a37b5b2b760a91b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600b81526020016a29ba32b0b5902a37b5b2b760a91b81525060405180604001604052806005815260200164535445414b60d81b8152508160039080519060200190620000ce92919062000287565b508051620000e490600490602084019062000287565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190960120905292909252610120525050600780546001600160a01b031916339081179091556200019890826200019f565b50620003ab565b6001600160a01b038216620001fa5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200020e919062000347565b90915550506001600160a01b038216600090815260208190526040812080548392906200023d90849062000347565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b82805462000295906200036e565b90600052602060002090601f016020900481019282620002b9576000855562000304565b82601f10620002d457805160ff191683800117855562000304565b8280016001018555821562000304579182015b8281111562000304578251825591602001919060010190620002e7565b506200031292915062000316565b5090565b5b8082111562000312576000815560010162000317565b6000602082840312156200034057600080fd5b5051919050565b600082198211156200036957634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200038357607f821691505b60208210811415620003a557634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516111af620003fb6000396000610b4101526000610b9001526000610b6b01526000610ac401526000610aee01526000610b1801526111af6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80637ecebe00116100a257806395d89b411161007157806395d89b411461024f578063a457c2d714610257578063a9059cbb1461026a578063d505accf1461027d578063dd62ed3e1461029057600080fd5b80637ecebe00146101de57806382041050146101f15780638da5cb5b1461021157806394bf804d1461023c57600080fd5b806323b872dd116100e957806323b872dd14610178578063313ce5671461018b5780633644e5151461019a57806339509351146101a257806370a08231146101b557600080fd5b806306fdde031461011b578063095ea7b31461013957806313eda8fc1461015c57806318160ddd14610166575b600080fd5b6101236102a3565b6040516101309190610f27565b60405180910390f35b61014c610147366004610f98565b610335565b6040519015158152602001610130565b61016461034d565b005b6002545b604051908152602001610130565b61014c610186366004610fc2565b61039d565b60405160128152602001610130565b61016a6103c1565b61014c6101b0366004610f98565b6103d0565b61016a6101c3366004610ffe565b6001600160a01b031660009081526020819052604090205490565b61016a6101ec366004610ffe565b6103f2565b61016a6101ff366004610ffe565b60086020526000908152604090205481565b600754610224906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b61016461024a366004611020565b610412565b610123610440565b61014c610265366004610f98565b61044f565b61014c610278366004610f98565b6104cf565b61016461028b36600461104c565b6104dd565b61016a61029e3660046110bf565b610641565b6060600380546102b2906110e9565b80601f01602080910402602001604051908101604052809291908181526020018280546102de906110e9565b801561032b5780601f106103005761010080835404028352916020019161032b565b820191906000526020600020905b81548152906001019060200180831161030e57829003601f168201915b5050505050905090565b60003361034381858561066c565b5060019392505050565b33600090815260086020526040902054620151809061036c9042611134565b1161037657600080fd5b33600081815260086020526040902042905561039b9068056bc75e2d63100000610790565b565b6000336103ab85828561086f565b6103b68585856108e9565b506001949350505050565b60006103cb610ab7565b905090565b6000336103438185856103e38383610641565b6103ed919061114b565b61066c565b6001600160a01b0381166000908152600560205260408120545b92915050565b6007546001600160a01b0316336001600160a01b03161461043257600080fd5b61043c8183610790565b5050565b6060600480546102b2906110e9565b6000338161045d8286610641565b9050838110156104c25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103b6828686840361066c565b6000336103438185856108e9565b8342111561052d5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016104b9565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861055c8c610bde565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006105b782610c06565b905060006105c782878787610c54565b9050896001600160a01b0316816001600160a01b03161461062a5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016104b9565b6106358a8a8a61066c565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106ce5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104b9565b6001600160a01b03821661072f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104b9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0382166107e65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104b9565b80600260008282546107f8919061114b565b90915550506001600160a01b0382166000908152602081905260408120805483929061082590849061114b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600061087b8484610641565b905060001981146108e357818110156108d65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104b9565b6108e3848484840361066c565b50505050565b6001600160a01b03831661094d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104b9565b6001600160a01b0382166109af5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104b9565b6001600160a01b03831660009081526020819052604090205481811015610a275760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104b9565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610a5e90849061114b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aaa91815260200190565b60405180910390a36108e3565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610b1057507f000000000000000000000000000000000000000000000000000000000000000046145b15610b3a57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b600061040c610c13610ab7565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610c6587878787610c7c565b91509150610c7281610d69565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610cb35750600090506003610d60565b8460ff16601b14158015610ccb57508460ff16601c14155b15610cdc5750600090506004610d60565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610d30573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610d5957600060019250925050610d60565b9150600090505b94509492505050565b6000816004811115610d7d57610d7d611163565b1415610d865750565b6001816004811115610d9a57610d9a611163565b1415610de85760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104b9565b6002816004811115610dfc57610dfc611163565b1415610e4a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104b9565b6003816004811115610e5e57610e5e611163565b1415610eb75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104b9565b6004816004811115610ecb57610ecb611163565b1415610f245760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016104b9565b50565b600060208083528351808285015260005b81811015610f5457858101830151858201604001528201610f38565b81811115610f66576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610f9357600080fd5b919050565b60008060408385031215610fab57600080fd5b610fb483610f7c565b946020939093013593505050565b600080600060608486031215610fd757600080fd5b610fe084610f7c565b9250610fee60208501610f7c565b9150604084013590509250925092565b60006020828403121561101057600080fd5b61101982610f7c565b9392505050565b6000806040838503121561103357600080fd5b8235915061104360208401610f7c565b90509250929050565b600080600080600080600060e0888a03121561106757600080fd5b61107088610f7c565b965061107e60208901610f7c565b95506040880135945060608801359350608088013560ff811681146110a257600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156110d257600080fd5b6110db83610f7c565b915061104360208401610f7c565b600181811c908216806110fd57607f821691505b60208210811415610c0057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156111465761114661111e565b500390565b6000821982111561115e5761115e61111e565b500190565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220b2c1347c5b0fc1c97bb4dac0075f11a1f0cffbaa07bd81d619229a8ea9d060fc64736f6c63430008090033";

type SteakTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SteakTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SteakToken__factory extends ContractFactory {
  constructor(...args: SteakTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SteakToken> {
    return super.deploy(initialSupply, overrides || {}) as Promise<SteakToken>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override attach(address: string): SteakToken {
    return super.attach(address) as SteakToken;
  }
  override connect(signer: Signer): SteakToken__factory {
    return super.connect(signer) as SteakToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SteakTokenInterface {
    return new utils.Interface(_abi) as SteakTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SteakToken {
    return new Contract(address, _abi, signerOrProvider) as SteakToken;
  }
}
