/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StakingRewards,
  StakingRewardsInterface,
} from "../../src/StakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardRate",
        type: "uint256",
      },
    ],
    name: "RewardRateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "setRewardRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "stakeWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526301e133806006553480156200001957600080fd5b506040516200174a3803806200174a8339810160408190526200003c91620000e1565b620000473362000074565b600180556001600160a01b03918216608052600280546001600160a01b0319169190921617905562000119565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000dc57600080fd5b919050565b60008060408385031215620000f557600080fd5b6200010083620000c4565b91506200011060208401620000c4565b90509250929050565b6080516115f2620001586000396000818161027c015281816105560152818161071c01528181610a7c01528181610c360152610c7101526115f26000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c806380faa57d116100de578063c04fd2d711610097578063df136d6511610071578063df136d6514610353578063e9fad8ee1461035c578063f2fde38b14610364578063f7c618c11461037757600080fd5b8063c04fd2d71461032f578063c8f33c9114610342578063cd3daf9d1461034b57600080fd5b806380faa57d146102bf5780638980f11f146102c55780638b876347146102d85780638da5cb5b146102f85780639e447fc614610309578063a694fc3a1461031c57600080fd5b8063386a95251161014b57806370a082311161012557806370a0823114610246578063715018a61461026f57806372f702f3146102775780637b0a47ee146102b657600080fd5b8063386a9525146102115780633d18b9121461021a5780635c975abb1461022257600080fd5b80628cc262146101925780630700037d146101b857806316c38b3c146101d857806318160ddd146101ed5780631c1f78eb146101f65780632e1a7d4d146101fe575b600080fd5b6101a56101a0366004611382565b61038a565b6040519081526020015b60405180910390f35b6101a56101c6366004611382565b60096020526000908152604090205481565b6101eb6101e63660046113ab565b610407565b005b6101a560075481565b6101a561042d565b6101eb61020c3660046113c8565b610444565b6101a560065481565b6101eb6105bb565b60025461023690600160a01b900460ff1681565b60405190151581526020016101af565b6101a5610254366004611382565b6001600160a01b03166000908152600a602052604090205490565b6101eb6106fe565b61029e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101af565b6101a560035481565b426101a5565b6101eb6102d33660046113e1565b610712565b6101a56102e6366004611382565b60086020526000908152604090205481565b6000546001600160a01b031661029e565b6101eb6103173660046113c8565b61088a565b6101eb61032a3660046113c8565b61091c565b6101eb61033d36600461140b565b610ad6565b6101a560045481565b6101a5610cd9565b6101a560055481565b6101eb610d33565b6101eb610372366004611382565b610d54565b60025461029e906001600160a01b031681565b6001600160a01b0381166000908152600960209081526040808320546008909252822054670de0b6b3a7640000906103c0610cd9565b6103ca9190611464565b6001600160a01b0385166000908152600a60205260409020546103ed919061147b565b6103f7919061149a565b61040191906114bc565b92915050565b61040f610dcd565b60028054911515600160a01b0260ff60a01b19909216919091179055565b600060065460035461043f919061147b565b905090565b600260015414156104705760405162461bcd60e51b8152600401610467906114d4565b60405180910390fd5b60026001553361047e610cd9565b600555426004556001600160a01b038116156104c95761049d8161038a565b6001600160a01b0382166000908152600960209081526040808320939093556005546008909152919020555b6000821161050d5760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b6044820152606401610467565b816007600082825461051f9190611464565b9091555050336000908152600a602052604081208054849290610543908490611464565b9091555061057d90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163384610e27565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a2505060018055565b600260015414156105de5760405162461bcd60e51b8152600401610467906114d4565b6002600155336105ec610cd9565b600555426004556001600160a01b038116156106375761060b8161038a565b6001600160a01b0382166000908152600960209081526040808320939093556005546008909152919020555b3360009081526009602052604090205480156106f657336000818152600960205260408082209190915560025490516394bf804d60e01b81526004810184905260248101929092526001600160a01b0316906394bf804d90604401600060405180830381600087803b1580156106ac57600080fd5b505af11580156106c0573d6000803e3d6000fd5b50506040518381523392507fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048691506020016105ab565b505060018055565b610706610dcd565b6107106000610e8f565b565b61071a610dcd565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415801561076a57506002546001600160a01b03838116911614155b6107c25760405162461bcd60e51b8152602060048201526024808201527f43616e6e6f74207769746864726177207374616b696e672f726577617264207460448201526337b5b2b760e11b6064820152608401610467565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b15801561080a57600080fd5b505af115801561081e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610842919061150b565b50604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa2891015b60405180910390a15050565b610892610dcd565b600061089c610cd9565b600555426004556001600160a01b038116156108e7576108bb8161038a565b6001600160a01b0382166000908152600960209081526040808320939093556005546008909152919020555b60038290556040518281527f8cbfafc8e0d9c5c81401c4b9c6e7d201198adc7eb8f8f1556c195ecd4c0a0e7b9060200161087e565b6002600154141561093f5760405162461bcd60e51b8152600401610467906114d4565b60026001553361094d610cd9565b600555426004556001600160a01b038116156109985761096c8161038a565b6001600160a01b0382166000908152600960209081526040808320939093556005546008909152919020555b600082116109d95760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610467565b600254600160a01b900460ff1615610a335760405162461bcd60e51b815260206004820152601d60248201527f5374616b696e672069732063757272656e746c792064697361626c65640000006044820152606401610467565b8160076000828254610a4591906114bc565b9091555050336000908152600a602052604081208054849290610a699084906114bc565b90915550610aa490506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085610edf565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906020016105ab565b60026001541415610af95760405162461bcd60e51b8152600401610467906114d4565b600260015533610b07610cd9565b600555426004556001600160a01b03811615610b5257610b268161038a565b6001600160a01b0382166000908152600960209081526040808320939093556005546008909152919020555b60008511610b935760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610467565b600254600160a01b900460ff1615610bed5760405162461bcd60e51b815260206004820152601d60248201527f5374616b696e672069732063757272656e746c792064697361626c65640000006044820152606401610467565b8460076000828254610bff91906114bc565b9091555050336000908152600a602052604081208054879290610c239084906114bc565b90915550610c6490506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333060001942898989610f1d565b610c996001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333088610edf565b60405185815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200160405180910390a2505060018055505050565b600060075460001415610ced575060055490565b600754600354600454610d009042611464565b610d0a919061147b565b610d1c90670de0b6b3a764000061147b565b610d26919061149a565b60055461043f91906114bc565b336000908152600a6020526040902054610d4c90610444565b6107106105bb565b610d5c610dcd565b6001600160a01b038116610dc15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610467565b610dca81610e8f565b50565b6000546001600160a01b031633146107105760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610467565b6040516001600160a01b038316602482015260448101829052610e8a90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611111565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610f179085906323b872dd60e01b90608401610e53565b50505050565b604051623f675f60e91b81526001600160a01b038881166004830152600091908a1690637ecebe009060240160206040518083038186803b158015610f6157600080fd5b505afa158015610f75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f999190611528565b60405163d505accf60e01b81526001600160a01b038a811660048301528981166024830152604482018990526064820188905260ff8716608483015260a4820186905260c48201859052919250908a169063d505accf9060e401600060405180830381600087803b15801561100d57600080fd5b505af1158015611021573d6000803e3d6000fd5b5050604051623f675f60e91b81526001600160a01b038b81166004830152600093508c169150637ecebe009060240160206040518083038186803b15801561106857600080fd5b505afa15801561107c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a09190611528565b90506110ad8260016114bc565b81146111055760405162461bcd60e51b815260206004820152602160248201527f5361666545524332303a207065726d697420646964206e6f74207375636365656044820152601960fa1b6064820152608401610467565b50505050505050505050565b6000611166826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111e39092919063ffffffff16565b805190915015610e8a5780806020019051810190611184919061150b565b610e8a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610467565b60606111f284846000856111fc565b90505b9392505050565b60608247101561125d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610467565b6001600160a01b0385163b6112b45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610467565b600080866001600160a01b031685876040516112d0919061156d565b60006040518083038185875af1925050503d806000811461130d576040519150601f19603f3d011682016040523d82523d6000602084013e611312565b606091505b509150915061132282828661132d565b979650505050505050565b6060831561133c5750816111f5565b82511561134c5782518084602001fd5b8160405162461bcd60e51b81526004016104679190611589565b80356001600160a01b038116811461137d57600080fd5b919050565b60006020828403121561139457600080fd5b6111f582611366565b8015158114610dca57600080fd5b6000602082840312156113bd57600080fd5b81356111f58161139d565b6000602082840312156113da57600080fd5b5035919050565b600080604083850312156113f457600080fd5b6113fd83611366565b946020939093013593505050565b6000806000806080858703121561142157600080fd5b84359350602085013560ff8116811461143957600080fd5b93969395505050506040820135916060013590565b634e487b7160e01b600052601160045260246000fd5b6000828210156114765761147661144e565b500390565b60008160001904831182151516156114955761149561144e565b500290565b6000826114b757634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156114cf576114cf61144e565b500190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60006020828403121561151d57600080fd5b81516111f58161139d565b60006020828403121561153a57600080fd5b5051919050565b60005b8381101561155c578181015183820152602001611544565b83811115610f175750506000910152565b6000825161157f818460208701611541565b9190910192915050565b60208152600082518060208401526115a8816040850160208701611541565b601f01601f1916919091016040019291505056fea264697066735822122029e06e60e9ccf32d95c939514294cf6c7267fe685909bd14f0dbfa25925d90ec64736f6c63430008090033";

type StakingRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingRewards__factory extends ContractFactory {
  constructor(...args: StakingRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakingToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingRewards> {
    return super.deploy(
      _stakingToken,
      _rewardToken,
      overrides || {}
    ) as Promise<StakingRewards>;
  }
  override getDeployTransaction(
    _stakingToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardToken,
      overrides || {}
    );
  }
  override attach(address: string): StakingRewards {
    return super.attach(address) as StakingRewards;
  }
  override connect(signer: Signer): StakingRewards__factory {
    return super.connect(signer) as StakingRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsInterface {
    return new utils.Interface(_abi) as StakingRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingRewards {
    return new Contract(address, _abi, signerOrProvider) as StakingRewards;
  }
}
