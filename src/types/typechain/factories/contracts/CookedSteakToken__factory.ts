/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CookedSteakToken,
  CookedSteakTokenInterface,
} from "../../contracts/CookedSteakToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601281526020017121b7b7b5b2b21029ba32b0b5902a37b5b2b760711b8152506040518060400160405280600681526020016563535445414b60d01b81525081600390816200006d919062000153565b5060046200007c828262000153565b50620000889150503390565b600580546001600160a01b0319166001600160a01b03929092169190911790556200021f565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000d957607f821691505b602082108103620000fa57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014e57600081815260208120601f850160051c81016020861015620001295750805b601f850160051c820191505b818110156200014a5782815560010162000135565b5050505b505050565b81516001600160401b038111156200016f576200016f620000ae565b6200018781620001808454620000c4565b8462000100565b602080601f831160018114620001bf5760008415620001a65750858301515b600019600386901b1c1916600185901b1785556200014a565b600085815260208120601f198616915b82811015620001f057888601518255948401946001909101908401620001cf565b50858210156200020f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610c02806200022f6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610206578063a9059cbb14610219578063dd62ed3e1461022c578063fca3b5aa1461026557600080fd5b806370a08231146101ad5780638da5cb5b146101d657806394bf804d146101e957806395d89b41146101fe57600080fd5b806318160ddd116100d357806318160ddd1461016657806323b872dd14610178578063313ce5671461018b578063395093511461019a57600080fd5b806306fdde03146100fa5780630754617214610118578063095ea7b314610143575b600080fd5b610102610278565b60405161010f91906109d9565b60405180910390f35b60065461012b906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b610156610151366004610a61565b61030a565b604051901515815260200161010f565b6002545b60405190815260200161010f565b610156610186366004610a8b565b610324565b6040516012815260200161010f565b6101566101a8366004610a61565b610348565b61016a6101bb366004610ac7565b6001600160a01b031660009081526020819052604090205490565b60055461012b906001600160a01b031681565b6101fc6101f7366004610ae9565b610387565b005b6101026103b5565b610156610214366004610a61565b6103c4565b610156610227366004610a61565b610473565b61016a61023a366004610b15565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101fc610273366004610ac7565b610481565b60606003805461028790610b3f565b80601f01602080910402602001604051908101604052809291908181526020018280546102b390610b3f565b80156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b5050505050905090565b6000336103188185856104db565b60019150505b92915050565b600033610332858285610633565b61033d8585856106e3565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906103189082908690610382908790610b92565b6104db565b6006546001600160a01b0316336001600160a01b0316146103a757600080fd5b6103b181836108fa565b5050565b60606004805461028790610b3f565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156104665760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61033d82868684036104db565b6000336103188185856106e3565b6005546001600160a01b0316336001600160a01b0316146104a157600080fd5b600680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6001600160a01b0383166105565760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161045d565b6001600160a01b0382166105d25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161045d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106dd57818110156106d05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161045d565b6106dd84848484036104db565b50505050565b6001600160a01b03831661075f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161045d565b6001600160a01b0382166107db5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161045d565b6001600160a01b0383166000908152602081905260409020548181101561086a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161045d565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108a1908490610b92565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108ed91815260200190565b60405180910390a36106dd565b6001600160a01b0382166109505760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161045d565b80600260008282546109629190610b92565b90915550506001600160a01b0382166000908152602081905260408120805483929061098f908490610b92565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b81811015610a06578581018301518582016040015282016109ea565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b80356001600160a01b0381168114610a5c57600080fd5b919050565b60008060408385031215610a7457600080fd5b610a7d83610a45565b946020939093013593505050565b600080600060608486031215610aa057600080fd5b610aa984610a45565b9250610ab760208501610a45565b9150604084013590509250925092565b600060208284031215610ad957600080fd5b610ae282610a45565b9392505050565b60008060408385031215610afc57600080fd5b82359150610b0c60208401610a45565b90509250929050565b60008060408385031215610b2857600080fd5b610b3183610a45565b9150610b0c60208401610a45565b600181811c90821680610b5357607f821691505b602082108103610b8c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082018082111561031e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212206632ab842609780825d498285185f7537208b449e1aea70a16881b170cde212f64736f6c63430008110033";

type CookedSteakTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CookedSteakTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CookedSteakToken__factory extends ContractFactory {
  constructor(...args: CookedSteakTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CookedSteakToken> {
    return super.deploy(overrides || {}) as Promise<CookedSteakToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CookedSteakToken {
    return super.attach(address) as CookedSteakToken;
  }
  override connect(signer: Signer): CookedSteakToken__factory {
    return super.connect(signer) as CookedSteakToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CookedSteakTokenInterface {
    return new utils.Interface(_abi) as CookedSteakTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CookedSteakToken {
    return new Contract(address, _abi, signerOrProvider) as CookedSteakToken;
  }
}
