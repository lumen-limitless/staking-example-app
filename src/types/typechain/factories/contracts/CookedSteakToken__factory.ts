/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CookedSteakToken,
  CookedSteakTokenInterface,
} from "../../contracts/CookedSteakToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604080518082018252601281527121b7b7b5b2b21029ba32b0b5902a37b5b2b760711b60208083019182528351808501909452600684526563535445414b60d01b908401528151919291610067916003916100ab565b50805161007b9060049060208401906100ab565b506100869150503390565b600580546001600160a01b0319166001600160a01b039290921691909117905561017f565b8280546100b790610144565b90600052602060002090601f0160209004810192826100d9576000855561011f565b82601f106100f257805160ff191683800117855561011f565b8280016001018555821561011f579182015b8281111561011f578251825591602001919060010190610104565b5061012b92915061012f565b5090565b5b8082111561012b5760008155600101610130565b600181811c9082168061015857607f821691505b6020821081141561017957634e487b7160e01b600052602260045260246000fd5b50919050565b610aab8061018e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610206578063a9059cbb14610219578063dd62ed3e1461022c578063fca3b5aa1461023f57600080fd5b806370a08231146101ad5780638da5cb5b146101d657806394bf804d146101e957806395d89b41146101fe57600080fd5b806318160ddd116100d357806318160ddd1461016657806323b872dd14610178578063313ce5671461018b578063395093511461019a57600080fd5b806306fdde03146100fa5780630754617214610118578063095ea7b314610143575b600080fd5b610102610252565b60405161010f91906108c5565b60405180910390f35b60065461012b906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b610156610151366004610936565b6102e4565b604051901515815260200161010f565b6002545b60405190815260200161010f565b610156610186366004610960565b6102fc565b6040516012815260200161010f565b6101566101a8366004610936565b610320565b61016a6101bb36600461099c565b6001600160a01b031660009081526020819052604090205490565b60055461012b906001600160a01b031681565b6101fc6101f73660046109be565b610342565b005b610102610370565b610156610214366004610936565b61037f565b610156610227366004610936565b6103ff565b61016a61023a3660046109ea565b61040d565b6101fc61024d36600461099c565b610438565b60606003805461026190610a14565b80601f016020809104026020016040519081016040528092919081815260200182805461028d90610a14565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000336102f281858561047a565b5060019392505050565b60003361030a85828561059e565b610315858585610618565b506001949350505050565b6000336102f2818585610333838361040d565b61033d9190610a4f565b61047a565b6006546001600160a01b0316336001600160a01b03161461036257600080fd5b61036c81836107e6565b5050565b60606004805461026190610a14565b6000338161038d828661040d565b9050838110156103f25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610315828686840361047a565b6000336102f2818585610618565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b0316336001600160a01b03161461045857600080fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166104dc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e9565b6001600160a01b03821661053d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105aa848461040d565b9050600019811461061257818110156106055760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103e9565b610612848484840361047a565b50505050565b6001600160a01b03831661067c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e9565b6001600160a01b0382166106de5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e9565b6001600160a01b038316600090815260208190526040902054818110156107565760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103e9565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061078d908490610a4f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107d991815260200190565b60405180910390a3610612565b6001600160a01b03821661083c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103e9565b806002600082825461084e9190610a4f565b90915550506001600160a01b0382166000908152602081905260408120805483929061087b908490610a4f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156108f2578581018301518582016040015282016108d6565b81811115610904576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461093157600080fd5b919050565b6000806040838503121561094957600080fd5b6109528361091a565b946020939093013593505050565b60008060006060848603121561097557600080fd5b61097e8461091a565b925061098c6020850161091a565b9150604084013590509250925092565b6000602082840312156109ae57600080fd5b6109b78261091a565b9392505050565b600080604083850312156109d157600080fd5b823591506109e16020840161091a565b90509250929050565b600080604083850312156109fd57600080fd5b610a068361091a565b91506109e16020840161091a565b600181811c90821680610a2857607f821691505b60208210811415610a4957634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610a7057634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122040e5864e726fdc1f4fb9a563c94225de8255bb5b7bb43e51832c281366a9225264736f6c63430008090033";

type CookedSteakTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CookedSteakTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CookedSteakToken__factory extends ContractFactory {
  constructor(...args: CookedSteakTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CookedSteakToken> {
    return super.deploy(overrides || {}) as Promise<CookedSteakToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CookedSteakToken {
    return super.attach(address) as CookedSteakToken;
  }
  override connect(signer: Signer): CookedSteakToken__factory {
    return super.connect(signer) as CookedSteakToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CookedSteakTokenInterface {
    return new utils.Interface(_abi) as CookedSteakTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CookedSteakToken {
    return new Contract(address, _abi, signerOrProvider) as CookedSteakToken;
  }
}
