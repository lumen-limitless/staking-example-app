/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StakingRewards,
  StakingRewardsInterface,
} from "../../contracts/StakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardRate",
        type: "uint256",
      },
    ],
    name: "RewardRateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "setRewardRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "stakeWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001a6a38038062001a6a83398101604081905262000034916200027e565b6200003f336200009e565b600180556001600160a01b03848116608052600280546001600160a01b03191691851691909117905581516200007d906003906020850190620000ee565b50805162000093906004906020840190620000ee565b50505050506200034b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000fc906200030e565b90600052602060002090601f0160209004810192826200012057600085556200016b565b82601f106200013b57805160ff19168380011785556200016b565b828001600101855582156200016b579182015b828111156200016b5782518255916020019190600101906200014e565b50620001799291506200017d565b5090565b5b808211156200017957600081556001016200017e565b80516001600160a01b0381168114620001ac57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001d957600080fd5b81516001600160401b0380821115620001f657620001f6620001b1565b604051601f8301601f19908116603f01168101908282118183101715620002215762000221620001b1565b816040528381526020925086838588010111156200023e57600080fd5b600091505b8382101562000262578582018301518183018401529082019062000243565b83821115620002745760008385830101525b9695505050505050565b600080600080608085870312156200029557600080fd5b620002a08562000194565b9350620002b06020860162000194565b60408601519093506001600160401b0380821115620002ce57600080fd5b620002dc88838901620001c7565b93506060870151915080821115620002f357600080fd5b506200030287828801620001c7565b91505092959194509250565b600181811c908216806200032357607f821691505b602082108114156200034557634e487b7160e01b600052602260045260246000fd5b50919050565b6080516116e06200038a600039600081816102a701528181610605015281816107cb01528181610b3101528181610ce40152610d1f01526116e06000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c806380faa57d116100f9578063c04fd2d711610097578063df136d6511610071578063df136d6514610386578063e9fad8ee1461038f578063f2fde38b14610397578063f7c618c1146103aa57600080fd5b8063c04fd2d714610362578063c8f33c9114610375578063cd3daf9d1461037e57600080fd5b80638da5cb5b116100d35780638da5cb5b1461032357806395d89b41146103345780639e447fc61461033c578063a694fc3a1461034f57600080fd5b806380faa57d146102ea5780638980f11f146102f05780638b8763471461030357600080fd5b80632e1a7d4d1161016657806370a082311161014057806370a0823114610271578063715018a61461029a57806372f702f3146102a25780637b0a47ee146102e157600080fd5b80632e1a7d4d146102395780633d18b9121461024c5780635c975abb1461025457600080fd5b80628cc262146101ad57806306fdde03146101d35780630700037d146101e85780630e213a3d1461020857806316c38b3c1461021b57806318160ddd14610230575b600080fd5b6101c06101bb366004611435565b6103bd565b6040519081526020015b60405180910390f35b6101db61043a565b6040516101ca919061147c565b6101c06101f6366004611435565b600b6020526000908152604090205481565b6101c06102163660046114af565b6104c8565b61022e6102293660046114d6565b6104d8565b005b6101c060085481565b61022e6102473660046114af565b6104f3565b61022e61066a565b6009546102619060ff1681565b60405190151581526020016101ca565b6101c061027f366004611435565b6001600160a01b03166000908152600c602052604090205490565b61022e6107ad565b6102c97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101ca565b6101c060055481565b426101c0565b61022e6102fe3660046114f3565b6107c1565b6101c0610311366004611435565b600a6020526000908152604090205481565b6000546001600160a01b03166102c9565b6101db610939565b61022e61034a3660046114af565b610946565b61022e61035d3660046114af565b6109d8565b61022e61037036600461151d565b610b8b565b6101c060065481565b6101c0610d87565b6101c060075481565b61022e610de6565b61022e6103a5366004611435565b610e07565b6002546102c9906001600160a01b031681565b6001600160a01b0381166000908152600b6020908152604080832054600a909252822054670de0b6b3a7640000906103f3610d87565b6103fd9190611576565b6001600160a01b0385166000908152600c6020526040902054610420919061158d565b61042a91906115ac565b61043491906115ce565b92915050565b60038054610447906115e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610473906115e6565b80156104c05780601f10610495576101008083540402835291602001916104c0565b820191906000526020600020905b8154815290600101906020018083116104a357829003601f168201915b505050505081565b600081600554610434919061158d565b6104e0610e80565b6009805460ff1916911515919091179055565b6002600154141561051f5760405162461bcd60e51b815260040161051690611621565b60405180910390fd5b60026001553361052d610d87565b600755426006556001600160a01b038116156105785761054c816103bd565b6001600160a01b0382166000908152600b6020908152604080832093909355600754600a909152919020555b600082116105bc5760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b6044820152606401610516565b81600860008282546105ce9190611576565b9091555050336000908152600c6020526040812080548492906105f2908490611576565b9091555061062c90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163384610eda565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a2505060018055565b6002600154141561068d5760405162461bcd60e51b815260040161051690611621565b60026001553361069b610d87565b600755426006556001600160a01b038116156106e6576106ba816103bd565b6001600160a01b0382166000908152600b6020908152604080832093909355600754600a909152919020555b336000908152600b602052604090205480156107a557336000818152600b60205260408082209190915560025490516394bf804d60e01b81526004810184905260248101929092526001600160a01b0316906394bf804d90604401600060405180830381600087803b15801561075b57600080fd5b505af115801561076f573d6000803e3d6000fd5b50506040518381523392507fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486915060200161065a565b505060018055565b6107b5610e80565b6107bf6000610f42565b565b6107c9610e80565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415801561081957506002546001600160a01b03838116911614155b6108715760405162461bcd60e51b8152602060048201526024808201527f43616e6e6f74207769746864726177207374616b696e672f726577617264207460448201526337b5b2b760e11b6064820152608401610516565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b1580156108b957600080fd5b505af11580156108cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f19190611658565b50604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa2891015b60405180910390a15050565b60048054610447906115e6565b61094e610e80565b6000610958610d87565b600755426006556001600160a01b038116156109a357610977816103bd565b6001600160a01b0382166000908152600b6020908152604080832093909355600754600a909152919020555b60058290556040518281527f8cbfafc8e0d9c5c81401c4b9c6e7d201198adc7eb8f8f1556c195ecd4c0a0e7b9060200161092d565b600260015414156109fb5760405162461bcd60e51b815260040161051690611621565b600260015533610a09610d87565b600755426006556001600160a01b03811615610a5457610a28816103bd565b6001600160a01b0382166000908152600b6020908152604080832093909355600754600a909152919020555b60008211610a955760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610516565b60095460ff1615610ae85760405162461bcd60e51b815260206004820152601d60248201527f5374616b696e672069732063757272656e746c792064697361626c65640000006044820152606401610516565b8160086000828254610afa91906115ce565b9091555050336000908152600c602052604081208054849290610b1e9084906115ce565b90915550610b5990506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085610f92565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200161065a565b60026001541415610bae5760405162461bcd60e51b815260040161051690611621565b600260015533610bbc610d87565b600755426006556001600160a01b03811615610c0757610bdb816103bd565b6001600160a01b0382166000908152600b6020908152604080832093909355600754600a909152919020555b60008511610c485760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610516565b60095460ff1615610c9b5760405162461bcd60e51b815260206004820152601d60248201527f5374616b696e672069732063757272656e746c792064697361626c65640000006044820152606401610516565b8460086000828254610cad91906115ce565b9091555050336000908152600c602052604081208054879290610cd19084906115ce565b90915550610d1290506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333060001980898989610fd0565b610d476001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333088610f92565b60405185815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200160405180910390a2505060018055505050565b600060085460001415610d9b575060075490565b600854600554600654610dae9042611576565b610db8919061158d565b610dca90670de0b6b3a764000061158d565b610dd491906115ac565b600754610de191906115ce565b905090565b336000908152600c6020526040902054610dff906104f3565b6107bf61066a565b610e0f610e80565b6001600160a01b038116610e745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610516565b610e7d81610f42565b50565b6000546001600160a01b031633146107bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610516565b6040516001600160a01b038316602482015260448101829052610f3d90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526111c4565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610fca9085906323b872dd60e01b90608401610f06565b50505050565b604051623f675f60e91b81526001600160a01b038881166004830152600091908a1690637ecebe009060240160206040518083038186803b15801561101457600080fd5b505afa158015611028573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104c9190611675565b60405163d505accf60e01b81526001600160a01b038a811660048301528981166024830152604482018990526064820188905260ff8716608483015260a4820186905260c48201859052919250908a169063d505accf9060e401600060405180830381600087803b1580156110c057600080fd5b505af11580156110d4573d6000803e3d6000fd5b5050604051623f675f60e91b81526001600160a01b038b81166004830152600093508c169150637ecebe009060240160206040518083038186803b15801561111b57600080fd5b505afa15801561112f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111539190611675565b90506111608260016115ce565b81146111b85760405162461bcd60e51b815260206004820152602160248201527f5361666545524332303a207065726d697420646964206e6f74207375636365656044820152601960fa1b6064820152608401610516565b50505050505050505050565b6000611219826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112969092919063ffffffff16565b805190915015610f3d57808060200190518101906112379190611658565b610f3d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610516565b60606112a584846000856112af565b90505b9392505050565b6060824710156113105760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610516565b6001600160a01b0385163b6113675760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610516565b600080866001600160a01b03168587604051611383919061168e565b60006040518083038185875af1925050503d80600081146113c0576040519150601f19603f3d011682016040523d82523d6000602084013e6113c5565b606091505b50915091506113d58282866113e0565b979650505050505050565b606083156113ef5750816112a8565b8251156113ff5782518084602001fd5b8160405162461bcd60e51b8152600401610516919061147c565b80356001600160a01b038116811461143057600080fd5b919050565b60006020828403121561144757600080fd5b6112a882611419565b60005b8381101561146b578181015183820152602001611453565b83811115610fca5750506000910152565b602081526000825180602084015261149b816040850160208701611450565b601f01601f19169190910160400192915050565b6000602082840312156114c157600080fd5b5035919050565b8015158114610e7d57600080fd5b6000602082840312156114e857600080fd5b81356112a8816114c8565b6000806040838503121561150657600080fd5b61150f83611419565b946020939093013593505050565b6000806000806080858703121561153357600080fd5b84359350602085013560ff8116811461154b57600080fd5b93969395505050506040820135916060013590565b634e487b7160e01b600052601160045260246000fd5b60008282101561158857611588611560565b500390565b60008160001904831182151516156115a7576115a7611560565b500290565b6000826115c957634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156115e1576115e1611560565b500190565b600181811c908216806115fa57607f821691505b6020821081141561161b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60006020828403121561166a57600080fd5b81516112a8816114c8565b60006020828403121561168757600080fd5b5051919050565b600082516116a0818460208701611450565b919091019291505056fea26469706673582212204318ec0d772a12a862534fc85ca6abf008092cb93384ed4443fbd04a6fc163b564736f6c63430008090033";

type StakingRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingRewards__factory extends ContractFactory {
  constructor(...args: StakingRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakingToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingRewards> {
    return super.deploy(
      _stakingToken,
      _rewardToken,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<StakingRewards>;
  }
  override getDeployTransaction(
    _stakingToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardToken,
      _name,
      _symbol,
      overrides || {}
    );
  }
  override attach(address: string): StakingRewards {
    return super.attach(address) as StakingRewards;
  }
  override connect(signer: Signer): StakingRewards__factory {
    return super.connect(signer) as StakingRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsInterface {
    return new utils.Interface(_abi) as StakingRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingRewards {
    return new Contract(address, _abi, signerOrProvider) as StakingRewards;
  }
}
